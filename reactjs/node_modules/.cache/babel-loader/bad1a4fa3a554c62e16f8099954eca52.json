{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\containers\\\\HomePage\\\\Section\\\\HotpotType.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HotpotType extends Component {\n  constructor(props) {\n    this.setState({});\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-type\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: \"C\\xE1c lo\\u1EA1i l\\u1EA9u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: \"Xem th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            ...this.props.settings,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-customize\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-image section-type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"L\\u1EA9u buffet 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language\n  };\n};\n\n//fire events của redux\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HotpotType);\n//connect:kết nối react với redux\n//\n\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */","map":{"version":3,"names":["React","Component","connect","FormattedMessage","Slider","jsxDEV","_jsxDEV","HotpotType","constructor","props","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","settings","mapStateToProps","state","isLoggedIn","user","language","app","mapDispatchToProps","dispatch"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/HomePage/Section/HotpotType.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\n\r\nclass HotpotType extends Component {\r\n  constructor(props) {\r\n    this.setState({});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"section-share section-type\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">Các loại lẩu</span>\r\n            <button className=\"btn-section\">Xem thêm</button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              <div className=\"section-customize\">\r\n                <div className=\"bg-image section-type\" />\r\n                <div>Lẩu buffet 1</div>\r\n              </div>\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\n//fire events của redux\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HotpotType);\r\n//connect:kết nối react với redux\r\n//\r\n\r\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,MAAM,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,SAASN,SAAS,CAAC;EACjCO,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnB;EACAC,MAAMA,CAAA,EAAG;IACP,oBACEL,OAAA;MAAKM,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzCP,OAAA;QAAKM,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCP,OAAA;UAAKM,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BP,OAAA;YAAMM,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnDX,OAAA;YAAQM,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACNX,OAAA;UAAKM,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BP,OAAA,CAACF,MAAM;YAAA,GAAK,IAAI,CAACK,KAAK,CAACS,QAAQ;YAAAL,QAAA,eAC7BP,OAAA;cAAKM,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCP,OAAA;gBAAKM,SAAS,EAAC;cAAuB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACzCX,OAAA;gBAAAO,QAAA,EAAK;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;;AAEA;;AAEA,MAAME,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLC,UAAU,EAAED,KAAK,CAACE,IAAI,CAACD,UAAU;IACjCE,QAAQ,EAAEH,KAAK,CAACI,GAAG,CAACD;EACtB,CAAC;AACH,CAAC;;AAED;AACA,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO,CAAC,CAAC;AACX,CAAC;AAED,eAAexB,OAAO,CAACiB,eAAe,EAAEM,kBAAkB,CAAC,CAAClB,UAAU,CAAC;AACvE;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}