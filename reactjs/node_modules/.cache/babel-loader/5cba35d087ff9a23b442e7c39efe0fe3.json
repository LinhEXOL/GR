{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/hotpotService\";\n\n// export const fetchProvinceStart = () => ({\n//   type: actionTypes.FETCH_PROVINCE_START,\n// });\n\n//provine\n\n//price\n\nexport const fetchPriceSuccess = priceData => ({\n  type: actionTypes.FETCH_PRICE_SUCCESS,\n  data: priceData\n});\nexport const fetchPriceFailed = () => ({\n  type: actionTypes.FETCH_PRICE_FAILED\n});\n\n//payment\n\nexport const fetchPaymentSuccess = paymentData => ({\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\n  data: paymentData\n});\nexport const fetchPaymentFailed = () => ({\n  type: actionTypes.FETCH_PAYMENT_FAILED\n});\nexport const fetchPriceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PRICE_START\n      });\n      let res = await getAllCodeService(\"PRICE\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPriceSuccess(res.data));\n      } else {\n        dispatch(fetchPriceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPriceFailed());\n      console.log(\"fetchPriceStart error\", e);\n    }\n  };\n};\nexport const fetchPaymentStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PAYMENT_START\n      });\n      let res = await getAllCodeService(\"PAYMENT\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPaymentSuccess(res.data));\n      } else {\n        dispatch(fetchPaymentFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPaymentFailed());\n      console.log(\"fetchPaymentStart error\", e);\n    }\n  };\n};","map":{"version":3,"names":["actionTypes","getAllCodeService","fetchPriceSuccess","priceData","type","FETCH_PRICE_SUCCESS","data","fetchPriceFailed","FETCH_PRICE_FAILED","fetchPaymentSuccess","paymentData","FETCH_PAYMENT_SUCCESS","fetchPaymentFailed","FETCH_PAYMENT_FAILED","fetchPriceStart","dispatch","getState","FETCH_PRICE_START","res","errCode","e","console","log","fetchPaymentStart","FETCH_PAYMENT_START"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/hotpotService\";\r\n\r\n// export const fetchProvinceStart = () => ({\r\n//   type: actionTypes.FETCH_PROVINCE_START,\r\n// });\r\n\r\n//provine\r\n\r\n//price\r\n\r\nexport const fetchPriceSuccess = (priceData) => ({\r\n  type: actionTypes.FETCH_PRICE_SUCCESS,\r\n  data: priceData,\r\n});\r\n\r\nexport const fetchPriceFailed = () => ({\r\n  type: actionTypes.FETCH_PRICE_FAILED,\r\n});\r\n\r\n//payment\r\n\r\nexport const fetchPaymentSuccess = (paymentData) => ({\r\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\r\n  data: paymentData,\r\n});\r\n\r\nexport const fetchPaymentFailed = () => ({\r\n  type: actionTypes.FETCH_PAYMENT_FAILED,\r\n});\r\n\r\nexport const fetchPriceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRICE_START,\r\n      });\r\n      let res = await getAllCodeService(\"PRICE\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPriceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPriceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPriceFailed());\r\n      console.log(\"fetchPriceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPaymentStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PAYMENT_START,\r\n      });\r\n      let res = await getAllCodeService(\"PAYMENT\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPaymentSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPaymentFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPaymentFailed());\r\n      console.log(\"fetchPaymentStart error\", e);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,8BAA8B;;AAEhE;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,SAAS,KAAM;EAC/CC,IAAI,EAAEJ,WAAW,CAACK,mBAAmB;EACrCC,IAAI,EAAEH;AACR,CAAC,CAAC;AAEF,OAAO,MAAMI,gBAAgB,GAAGA,CAAA,MAAO;EACrCH,IAAI,EAAEJ,WAAW,CAACQ;AACpB,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,WAAW,KAAM;EACnDN,IAAI,EAAEJ,WAAW,CAACW,qBAAqB;EACvCL,IAAI,EAAEI;AACR,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAGA,CAAA,MAAO;EACvCR,IAAI,EAAEJ,WAAW,CAACa;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QACPX,IAAI,EAAEJ,WAAW,CAACiB;MACpB,CAAC,CAAC;MACF,IAAIC,GAAG,GAAG,MAAMjB,iBAAiB,CAAC,OAAO,CAAC;MAC1C,IAAIiB,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BJ,QAAQ,CAACb,iBAAiB,CAACgB,GAAG,CAACZ,IAAI,CAAC,CAAC;MACvC,CAAC,MAAM;QACLS,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOa,CAAC,EAAE;MACVL,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;MAC5Bc,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO,OAAOR,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QACPX,IAAI,EAAEJ,WAAW,CAACwB;MACpB,CAAC,CAAC;MACF,IAAIN,GAAG,GAAG,MAAMjB,iBAAiB,CAAC,SAAS,CAAC;MAC5C,IAAIiB,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BJ,QAAQ,CAACN,mBAAmB,CAACS,GAAG,CAACZ,IAAI,CAAC,CAAC;MACzC,CAAC,MAAM;QACLS,QAAQ,CAACH,kBAAkB,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVL,QAAQ,CAACH,kBAAkB,CAAC,CAAC,CAAC;MAC9BS,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,CAAC,CAAC;IAC3C;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}