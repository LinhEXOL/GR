{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\containers\\\\System\\\\Admin\\\\ManageSchedule.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./ManageSchedule.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport Select from \"react-select\";\nimport * as actions from \"../../../store/actions\";\nimport { CRUD_ACTIONS, LANGUAGES } from \"../../../utils\";\nimport DatePicker from \"../../../components/Input/DatePicker\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ManageSchedule extends Component {\n  constructor(props) {\n    super(props);\n    this.buildDataInputSelect = inputData => {\n      let result = [];\n      if (inputData && inputData.length > 0) {\n        console.log(\"Type of inputData:\", typeof inputData);\n        inputData.map((item, index) => {\n          let object = {};\n          object.label = `${item.name}`;\n          object.value = item.id;\n          result.push(object);\n        });\n      }\n      return result;\n    };\n    this.handleChangeSelect = async selectedHotpot => {\n      this.setState({\n        selectedHotpot\n      });\n    };\n    this.handleOnChangeDatePicker = date => {\n      this.setState({\n        currentDate: date\n      });\n    };\n    this.state = {\n      listHotpotNames: [],\n      selectedHotpot: {},\n      currentDate: new Date()\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllHotpotNames();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allHotpotNames !== this.props.allHotpotNames) {\n      let dataSelect = this.buildDataInputSelect(this.props.allHotpotNames);\n      console.log(\"Type of dataSelect:\", typeof dataSelect);\n      this.setState({\n        listHotpotNames: dataSelect\n      });\n      console.log(\"Type of listHotpotNames:\", typeof listHotpotNames);\n    }\n  }\n  render() {\n    console.log(\"check state schedule\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-schedule-title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"manage-schedule.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ch\\u1ECDn m\\xF3n l\\u1EA9u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: this.state.selectedHotpot,\n              onChange: this.handleChangeSelect,\n              options: this.state.listHotpotNames\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Ch\\u1ECDn ng\\xE0y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              onChange: this.handleOnChangeDatePicker,\n              className: \"form-control\",\n              value: this.state.currentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 pick-hour-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"L\\u01B0u th\\xF4ng tin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    allHotpotNames: state.admin.allHotpotNames,\n    language: state.app.language\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllHotpotNames: () => dispatch(actions.fetchAllHotpotNames())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);","map":{"version":3,"names":["React","Component","connect","Redirect","Route","Switch","FormattedMessage","Select","actions","CRUD_ACTIONS","LANGUAGES","DatePicker","moment","jsxDEV","_jsxDEV","ManageSchedule","constructor","props","buildDataInputSelect","inputData","result","length","console","log","map","item","index","object","label","name","value","id","push","handleChangeSelect","selectedHotpot","setState","handleOnChangeDatePicker","date","currentDate","state","listHotpotNames","Date","componentDidMount","fetchAllHotpotNames","componentDidUpdate","prevProps","prevState","snapshot","allHotpotNames","dataSelect","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","options","mapStateToProps","isLoggedIn","user","admin","language","app","mapDispatchToProps","dispatch"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/System/Admin/ManageSchedule.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./ManageSchedule.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { CRUD_ACTIONS, LANGUAGES } from \"../../../utils\";\r\nimport DatePicker from \"../../../components/Input/DatePicker\";\r\nimport moment from \"moment\";\r\n\r\nclass ManageSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listHotpotNames: [],\r\n      selectedHotpot: {},\r\n      currentDate: new Date(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchAllHotpotNames();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.allHotpotNames !== this.props.allHotpotNames) {\r\n      let dataSelect = this.buildDataInputSelect(this.props.allHotpotNames);\r\n      console.log(\"Type of dataSelect:\", typeof dataSelect);\r\n      this.setState({\r\n        listHotpotNames: dataSelect,\r\n      });\r\n      console.log(\"Type of listHotpotNames:\", typeof listHotpotNames);\r\n    }\r\n  }\r\n\r\n  buildDataInputSelect = (inputData) => {\r\n    let result = [];\r\n    if (inputData && inputData.length > 0) {\r\n      console.log(\"Type of inputData:\", typeof inputData);\r\n      inputData.map((item, index) => {\r\n        let object = {};\r\n        object.label = `${item.name}`;\r\n        object.value = item.id;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  handleChangeSelect = async (selectedHotpot) => {\r\n    this.setState({ selectedHotpot });\r\n  };\r\n\r\n  handleOnChangeDatePicker = (date) => {\r\n    this.setState({\r\n      currentDate: date,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"check state schedule\", this.state);\r\n    return (\r\n      <div className=\"manage-schedule-container\">\r\n        <div className=\"manage-schedule-title\">\r\n          <FormattedMessage id=\"manage-schedule.title\" />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6 form-group\">\r\n              <label>Chọn món lẩu</label>\r\n              <Select\r\n                value={this.state.selectedHotpot}\r\n                onChange={this.handleChangeSelect}\r\n                options={this.state.listHotpotNames}\r\n              />\r\n            </div>\r\n            <div className=\"col-6 form-group\">\r\n              <label>Chọn ngày</label>\r\n              <DatePicker\r\n                onChange={this.handleOnChangeDatePicker}\r\n                className=\"form-control\"\r\n                value={this.state.currentDate}\r\n              />\r\n            </div>\r\n            <div className=\"col-12 pick-hour-container\"></div>\r\n            <button className=\"btn btn-primary\">Lưu thông tin</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    allHotpotNames: state.admin.allHotpotNames,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllHotpotNames: () => dispatch(actions.fetchAllHotpotNames()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}