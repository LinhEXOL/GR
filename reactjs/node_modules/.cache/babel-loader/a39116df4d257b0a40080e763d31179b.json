{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/hotpotService\";\n\n// export const fetchProvinceStart = () => ({\n//   type: actionTypes.FETCH_PROVINCE_START,\n// });\n\n//provine\nexport const fetchProvinceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PROVINCE_START\n      });\n      let res = await getAllCodeService(\"PROVINCE\");\n      if (res && res.errCode === 0) {\n        console.log(\"check getState: \", getState);\n        dispatch(fetchProvinceSuccess(res.data));\n      } else {\n        dispatch(fetchProvinceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchProvinceFailed());\n      console.log(\"fetchProvinceStart error\", e);\n    }\n  };\n};\nexport const fetchProvinceSuccess = provinceData => ({\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\n  data: provinceData\n});\nexport const fetchProvinceFailed = () => ({\n  type: actionTypes.FETCH_PROVINCE_FAILED\n});\n\n//price\n\nexport const fetchPriceSuccess = priceData => ({\n  type: actionTypes.FETCH_PRICE_SUCCESS,\n  data: priceData\n});\nexport const fetchPriceFailed = () => ({\n  type: actionTypes.FETCH_PRICE_FAILED\n});\n\n//payment\n\nexport const fetchPaymentSuccess = paymentData => ({\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\n  data: paymentData\n});\nexport const fetchPaymentFailed = () => ({\n  type: actionTypes.FETCH_PAYMENT_FAILED\n});\nexport const fetchPriceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PRICE_START\n      });\n      let res = await getAllCodeService(\"PRICE\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPriceSuccess(res.data));\n      } else {\n        dispatch(fetchPriceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPriceFailed());\n      console.log(\"fetchPriceStart error\", e);\n    }\n  };\n};\nexport const fetchPaymentStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PAYMENT_START\n      });\n      let res = await getAllCodeService(\"PAYMENT\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPaymentSuccess(res.data));\n      } else {\n        dispatch(fetchPaymentFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPaymentFailed());\n      console.log(\"fetchPaymentStart error\", e);\n    }\n  };\n};","map":{"version":3,"names":["actionTypes","getAllCodeService","fetchProvinceStart","dispatch","getState","type","FETCH_PROVINCE_START","res","errCode","console","log","fetchProvinceSuccess","data","fetchProvinceFailed","e","provinceData","FETCH_PROVINCE_SUCCESS","FETCH_PROVINCE_FAILED","fetchPriceSuccess","priceData","FETCH_PRICE_SUCCESS","fetchPriceFailed","FETCH_PRICE_FAILED","fetchPaymentSuccess","paymentData","FETCH_PAYMENT_SUCCESS","fetchPaymentFailed","FETCH_PAYMENT_FAILED","fetchPriceStart","FETCH_PRICE_START","fetchPaymentStart","FETCH_PAYMENT_START"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/hotpotService\";\r\n\r\n// export const fetchProvinceStart = () => ({\r\n//   type: actionTypes.FETCH_PROVINCE_START,\r\n// });\r\n\r\n//provine\r\nexport const fetchProvinceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PROVINCE_START,\r\n      });\r\n      let res = await getAllCodeService(\"PROVINCE\");\r\n      if (res && res.errCode === 0) {\r\n        console.log(\"check getState: \", getState);\r\n        dispatch(fetchProvinceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchProvinceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchProvinceFailed());\r\n      console.log(\"fetchProvinceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProvinceSuccess = (provinceData) => ({\r\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\r\n  data: provinceData,\r\n});\r\n\r\nexport const fetchProvinceFailed = () => ({\r\n  type: actionTypes.FETCH_PROVINCE_FAILED,\r\n});\r\n\r\n//price\r\n\r\nexport const fetchPriceSuccess = (priceData) => ({\r\n  type: actionTypes.FETCH_PRICE_SUCCESS,\r\n  data: priceData,\r\n});\r\n\r\nexport const fetchPriceFailed = () => ({\r\n  type: actionTypes.FETCH_PRICE_FAILED,\r\n});\r\n\r\n//payment\r\n\r\nexport const fetchPaymentSuccess = (paymentData) => ({\r\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\r\n  data: paymentData,\r\n});\r\n\r\nexport const fetchPaymentFailed = () => ({\r\n  type: actionTypes.FETCH_PAYMENT_FAILED,\r\n});\r\n\r\nexport const fetchPriceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRICE_START,\r\n      });\r\n      let res = await getAllCodeService(\"PRICE\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPriceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPriceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPriceFailed());\r\n      console.log(\"fetchPriceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPaymentStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PAYMENT_START,\r\n      });\r\n      let res = await getAllCodeService(\"PAYMENT\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPaymentSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPaymentFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPaymentFailed());\r\n      console.log(\"fetchPaymentStart error\", e);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,8BAA8B;;AAEhE;AACA;AACA;;AAEA;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QACPE,IAAI,EAAEL,WAAW,CAACM;MACpB,CAAC,CAAC;MACF,IAAIC,GAAG,GAAG,MAAMN,iBAAiB,CAAC,UAAU,CAAC;MAC7C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,QAAQ,CAAC;QACzCD,QAAQ,CAACQ,oBAAoB,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLT,QAAQ,CAACU,mBAAmB,CAAC,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVX,QAAQ,CAACU,mBAAmB,CAAC,CAAC,CAAC;MAC/BJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,CAAC,CAAC;IAC5C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMH,oBAAoB,GAAII,YAAY,KAAM;EACrDV,IAAI,EAAEL,WAAW,CAACgB,sBAAsB;EACxCJ,IAAI,EAAEG;AACR,CAAC,CAAC;AAEF,OAAO,MAAMF,mBAAmB,GAAGA,CAAA,MAAO;EACxCR,IAAI,EAAEL,WAAW,CAACiB;AACpB,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,SAAS,KAAM;EAC/Cd,IAAI,EAAEL,WAAW,CAACoB,mBAAmB;EACrCR,IAAI,EAAEO;AACR,CAAC,CAAC;AAEF,OAAO,MAAME,gBAAgB,GAAGA,CAAA,MAAO;EACrChB,IAAI,EAAEL,WAAW,CAACsB;AACpB,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,WAAW,KAAM;EACnDnB,IAAI,EAAEL,WAAW,CAACyB,qBAAqB;EACvCb,IAAI,EAAEY;AACR,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAGA,CAAA,MAAO;EACvCrB,IAAI,EAAEL,WAAW,CAAC2B;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,OAAOzB,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QACPE,IAAI,EAAEL,WAAW,CAAC6B;MACpB,CAAC,CAAC;MACF,IAAItB,GAAG,GAAG,MAAMN,iBAAiB,CAAC,OAAO,CAAC;MAC1C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BL,QAAQ,CAACe,iBAAiB,CAACX,GAAG,CAACK,IAAI,CAAC,CAAC;MACvC,CAAC,MAAM;QACLT,QAAQ,CAACkB,gBAAgB,CAAC,CAAC,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOP,CAAC,EAAE;MACVX,QAAQ,CAACkB,gBAAgB,CAAC,CAAC,CAAC;MAC5BZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,CAAC,CAAC;IACzC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAO,OAAO3B,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC;QACPE,IAAI,EAAEL,WAAW,CAAC+B;MACpB,CAAC,CAAC;MACF,IAAIxB,GAAG,GAAG,MAAMN,iBAAiB,CAAC,SAAS,CAAC;MAC5C,IAAIM,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BL,QAAQ,CAACoB,mBAAmB,CAAChB,GAAG,CAACK,IAAI,CAAC,CAAC;MACzC,CAAC,MAAM;QACLT,QAAQ,CAACuB,kBAAkB,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,OAAOZ,CAAC,EAAE;MACVX,QAAQ,CAACuB,kBAAkB,CAAC,CAAC,CAAC;MAC9BjB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEI,CAAC,CAAC;IAC3C;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}