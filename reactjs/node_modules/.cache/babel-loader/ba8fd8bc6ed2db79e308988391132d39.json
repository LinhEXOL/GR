{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/hotpotService\";\n\n// export const fetchProvinceStart = () => ({\n//   type: actionTypes.FETCH_PROVINCE_START,\n// });\n\nexport const fetchProvinceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({});\n      let res = await getAllCodeService(\"PROVINCE\");\n      if (res && res.errCode === 0) {\n        console.log(\"check getState: \", getState);\n        dispatch(fetchProvinceSuccess(res.data));\n      } else {\n        dispatch(fetchProvinceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchProvinceFailed());\n      console.log(\"fetchProvinceStart error\", e);\n    }\n  };\n};\nexport const fetchProvinceSuccess = provinceData => ({\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\n  data: provinceData\n});\nexport const fetchProvinceFailed = () => ({\n  type: actionTypes.FETCH_PROVINCE_FAILED\n});","map":{"version":3,"names":["actionTypes","getAllCodeService","fetchProvinceStart","dispatch","getState","res","errCode","console","log","fetchProvinceSuccess","data","fetchProvinceFailed","e","provinceData","type","FETCH_PROVINCE_SUCCESS","FETCH_PROVINCE_FAILED"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/hotpotService\";\r\n\r\n// export const fetchProvinceStart = () => ({\r\n//   type: actionTypes.FETCH_PROVINCE_START,\r\n// });\r\n\r\nexport const fetchProvinceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({});\r\n      let res = await getAllCodeService(\"PROVINCE\");\r\n      if (res && res.errCode === 0) {\r\n        console.log(\"check getState: \", getState);\r\n        dispatch(fetchProvinceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchProvinceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchProvinceFailed());\r\n      console.log(\"fetchProvinceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProvinceSuccess = (provinceData) => ({\r\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\r\n  data: provinceData,\r\n});\r\n\r\nexport const fetchProvinceFailed = () => ({\r\n  type: actionTypes.FETCH_PROVINCE_FAILED,\r\n});\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,8BAA8B;;AAEhE;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAAC,CAAC,CAAC,CAAC;MACZ,IAAIE,GAAG,GAAG,MAAMJ,iBAAiB,CAAC,UAAU,CAAC;MAC7C,IAAII,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;QACzCD,QAAQ,CAACM,oBAAoB,CAACJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLP,QAAQ,CAACQ,mBAAmB,CAAC,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVT,QAAQ,CAACQ,mBAAmB,CAAC,CAAC,CAAC;MAC/BJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,CAAC,CAAC;IAC5C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMH,oBAAoB,GAAII,YAAY,KAAM;EACrDC,IAAI,EAAEd,WAAW,CAACe,sBAAsB;EACxCL,IAAI,EAAEG;AACR,CAAC,CAAC;AAEF,OAAO,MAAMF,mBAAmB,GAAGA,CAAA,MAAO;EACxCG,IAAI,EAAEd,WAAW,CAACgB;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}