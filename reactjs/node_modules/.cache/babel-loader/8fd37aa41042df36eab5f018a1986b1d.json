{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\routes\\\\System.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport UserManage from \"../containers/System/UserManage\";\nimport HotpotManage from \"../containers/System/HotpotManage\";\nimport HotpotRedux from \"../containers/System/Admin/HotpotRedux\";\nimport UserRedux from \"../containers/System/Admin/UserRedux\";\nimport Header from \"../containers/Header/Header\";\nimport ManageHotpot from \"../containers/System/Admin/ManageHotpot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass System extends Component {\n  render() {\n    const {\n      systemMenuPath,\n      isLoggedIn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"system-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-list\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/manage-hotpot\",\n              component: ManageHotpot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/CRUD-hotpot\",\n              component: HotpotManage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/CRUD-user\",\n              component: UserManage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/hotpot-redux\",\n              component: HotpotRedux\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/system/user-redux\",\n              component: UserRedux\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), \"component=\", () => {\n              return /*#__PURE__*/_jsxDEV(Redirect, {\n                to: systemMenuPath\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 24\n              }, this);\n            }]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    systemMenuPath: state.app.systemMenuPath,\n    isLoggedIn: state.user.isLoggedIn\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(System);","map":{"version":3,"names":["React","Component","connect","Redirect","Route","Switch","UserManage","HotpotManage","HotpotRedux","UserRedux","Header","ManageHotpot","jsxDEV","_jsxDEV","System","render","systemMenuPath","isLoggedIn","props","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","component","to","mapStateToProps","state","app","user","mapDispatchToProps","dispatch"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/routes/System.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport HotpotManage from \"../containers/System/HotpotManage\";\r\nimport HotpotRedux from \"../containers/System/Admin/HotpotRedux\";\r\nimport UserRedux from \"../containers/System/Admin/UserRedux\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport ManageHotpot from \"../containers/System/Admin/ManageHotpot\";\r\n\r\nclass System extends Component {\r\n  render() {\r\n    const { systemMenuPath, isLoggedIn } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"system-container\">\r\n          <div className=\"system-list\">\r\n            <Switch>\r\n              <Route path=\"/system/manage-hotpot\" component={ManageHotpot} />\r\n              <Route path=\"/system/CRUD-hotpot\" component={HotpotManage} />\r\n              <Route path=\"/system/CRUD-user\" component={UserManage} />\r\n              <Route path=\"/system/hotpot-redux\" component={HotpotRedux} />\r\n              <Route path=\"/system/user-redux\" component={UserRedux} />\r\n              component=\r\n              {() => {\r\n                return <Redirect to={systemMenuPath} />;\r\n              }}\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    systemMenuPath: state.app.systemMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC1D,OAAOC,UAAU,MAAM,iCAAiC;AACxD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,WAAW,MAAM,wCAAwC;AAChE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,YAAY,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,MAAM,SAASb,SAAS,CAAC;EAC7Bc,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,cAAc;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACC,KAAK;IACjD,oBACEL,OAAA,CAACb,KAAK,CAACmB,QAAQ;MAAAC,QAAA,GACZH,UAAU,iBAAIJ,OAAA,CAACH,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBX,OAAA;QAAKY,SAAS,EAAC,kBAAkB;QAAAL,QAAA,eAC/BP,OAAA;UAAKY,SAAS,EAAC,aAAa;UAAAL,QAAA,eAC1BP,OAAA,CAACR,MAAM;YAAAe,QAAA,gBACLP,OAAA,CAACT,KAAK;cAACsB,IAAI,EAAC,uBAAuB;cAACC,SAAS,EAAEhB;YAAa;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/DX,OAAA,CAACT,KAAK;cAACsB,IAAI,EAAC,qBAAqB;cAACC,SAAS,EAAEpB;YAAa;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7DX,OAAA,CAACT,KAAK;cAACsB,IAAI,EAAC,mBAAmB;cAACC,SAAS,EAAErB;YAAW;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzDX,OAAA,CAACT,KAAK;cAACsB,IAAI,EAAC,sBAAsB;cAACC,SAAS,EAAEnB;YAAY;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7DX,OAAA,CAACT,KAAK;cAACsB,IAAI,EAAC,oBAAoB;cAACC,SAAS,EAAElB;YAAU;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAEzD,EAAC,MAAM;cACL,oBAAOX,OAAA,CAACV,QAAQ;gBAACyB,EAAE,EAAEZ;cAAe;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YACzC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAErB;AACF;AAEA,MAAMK,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLd,cAAc,EAAEc,KAAK,CAACC,GAAG,CAACf,cAAc;IACxCC,UAAU,EAAEa,KAAK,CAACE,IAAI,CAACf;EACzB,CAAC;AACH,CAAC;AAED,MAAMgB,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO,CAAC,CAAC;AACX,CAAC;AAED,eAAehC,OAAO,CAAC2B,eAAe,EAAEI,kBAAkB,CAAC,CAACnB,MAAM,CAAC"},"metadata":{},"sourceType":"module"}