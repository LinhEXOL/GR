{"ast":null,"code":"import actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  isLoadingProvince: false,\n  provinces: [],\n  payments: [],\n  prices: [],\n  hotpots: []\n};\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_PROVINCE_START:\n      let copyState = {\n        ...state\n      }; //object {}\n      copyState.isLoadingProvince = true;\n      return {\n        ...copyState\n      };\n    case actionTypes.FETCH_PROVINCE_SUCCESS:\n      state.provinces = action.data;\n      state.isLoadingProvince = false;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_PROVINCE_FAILED:\n      state.isLoadingProvince = true;\n      state.provinces = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_PRICE_SUCCESS:\n      state.prices = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_PRICE_FAILED:\n      state.prices = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_PAYMENT_SUCCESS:\n      state.payments = action.data;\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_PAYMENT_FAILED:\n      state.payments = [];\n      return {\n        ...state\n      };\n    case actionTypes.FETCH_ALL_HOTPOTS_SUCCESS:\n      state.hotpots = action.hotpots;\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\nexport default adminReducer;","map":{"version":3,"names":["actionTypes","initialState","isLoadingProvince","provinces","payments","prices","hotpots","adminReducer","state","action","type","FETCH_PROVINCE_START","copyState","FETCH_PROVINCE_SUCCESS","data","FETCH_PROVINCE_FAILED","FETCH_PRICE_SUCCESS","FETCH_PRICE_FAILED","FETCH_PAYMENT_SUCCESS","FETCH_PAYMENT_FAILED","FETCH_ALL_HOTPOTS_SUCCESS"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/reducers/adminReducer.js"],"sourcesContent":["import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoadingProvince: false,\r\n  provinces: [],\r\n  payments: [],\r\n  prices: [],\r\n  hotpots: [],\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_PROVINCE_START:\r\n      let copyState = { ...state }; //object {}\r\n      copyState.isLoadingProvince = true;\r\n      return {\r\n        ...copyState,\r\n      };\r\n    case actionTypes.FETCH_PROVINCE_SUCCESS:\r\n      state.provinces = action.data;\r\n      state.isLoadingProvince = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_PROVINCE_FAILED:\r\n      state.isLoadingProvince = true;\r\n      state.provinces = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_PRICE_SUCCESS:\r\n      state.prices = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_PRICE_FAILED:\r\n      state.prices = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_PAYMENT_SUCCESS:\r\n      state.payments = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_PAYMENT_FAILED:\r\n      state.payments = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case actionTypes.FETCH_ALL_HOTPOTS_SUCCESS:\r\n      state.hotpots = action.hotpots;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,MAAMC,YAAY,GAAG;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,WAAW,CAACW,oBAAoB;MACnC,IAAIC,SAAS,GAAG;QAAE,GAAGJ;MAAM,CAAC,CAAC,CAAC;MAC9BI,SAAS,CAACV,iBAAiB,GAAG,IAAI;MAClC,OAAO;QACL,GAAGU;MACL,CAAC;IACH,KAAKZ,WAAW,CAACa,sBAAsB;MACrCL,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACK,IAAI;MAC7BN,KAAK,CAACN,iBAAiB,GAAG,KAAK;MAC/B,OAAO;QACL,GAAGM;MACL,CAAC;IACH,KAAKR,WAAW,CAACe,qBAAqB;MACpCP,KAAK,CAACN,iBAAiB,GAAG,IAAI;MAC9BM,KAAK,CAACL,SAAS,GAAG,EAAE;MACpB,OAAO;QACL,GAAGK;MACL,CAAC;IAEH,KAAKR,WAAW,CAACgB,mBAAmB;MAClCR,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACK,IAAI;MAC1B,OAAO;QACL,GAAGN;MACL,CAAC;IACH,KAAKR,WAAW,CAACiB,kBAAkB;MACjCT,KAAK,CAACH,MAAM,GAAG,EAAE;MACjB,OAAO;QACL,GAAGG;MACL,CAAC;IAEH,KAAKR,WAAW,CAACkB,qBAAqB;MACpCV,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACK,IAAI;MAC5B,OAAO;QACL,GAAGN;MACL,CAAC;IACH,KAAKR,WAAW,CAACmB,oBAAoB;MACnCX,KAAK,CAACJ,QAAQ,GAAG,EAAE;MACnB,OAAO;QACL,GAAGI;MACL,CAAC;IAEH,KAAKR,WAAW,CAACoB,yBAAyB;MACxCZ,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACH,OAAO;MAC9B,OAAO;QACL,GAAGE;MACL,CAAC;IAEH;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module"}