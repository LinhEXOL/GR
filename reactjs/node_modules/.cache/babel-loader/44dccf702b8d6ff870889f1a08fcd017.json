{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\containers\\\\System\\\\HotpotManage.js\";\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport \"./HotpotManage.scss\";\nimport { getAllHotpots } from \"../../services/hotpotService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HotpotManage extends Component {\n  //constructor:\n  //khi component được render thì nó sẽ check hàm constructor đầu tiên\n  // khởi tạo những state (những biến mà ta muốn dùng class HotpotManage này)\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state = {\n      arrHotpots: []\n    };\n  }\n\n  async componentDidMount() {\n    let response = await getAllHotpots(\"ALL\");\n\n    if (response && response.errCode === 0) {\n      this.setState({\n        arrHotpots: response.hotpots\n      });\n    }\n  }\n  /**\r\n   *Life cycle:\r\n   Run component:\r\n   1. Run constructor -> init state (khởi tạo những biến sẽ dùng)\r\n   2. Run Did mount: khi nào muốn gán gtri cho 1 state nào đấy sẽ dùng trong hàm did mount \r\n   - gọi API lấy giá trị vào và set state cho component \r\n   - state lưu giá trị của các biến, và được dùng trong render \r\n   3. Run render \r\n   render cho ta nhìn thấy trên màn hình \r\n   *\r\n   *\r\n   *\r\n   *\r\n   */\n  //   render() {\n  //     console.log(\"check render\", this.state);\n  //     let arrHotpots = this.arrHotpots;\n  //     return (\n  //       <div className=\"hotpots-container\">\n  //         <div className=\"title\">Manage hotpot</div>\n  //         <div className=\"hotpots-table mt-3 mx-1\">\n  //           <table id=\"customers\">\n  //             <tr>\n  //               <th>Name</th>\n  //               <th>ProvinceId</th>\n  //               <th>Restaurant Address</th>\n  //               <th>Phone number</th>\n  //               <th>Restaurant Name</th>\n  //               <th>Restaurant Id</th>\n  //               <th>Type Id</th>\n  //               <th>PriceId</th>\n  //               <th>Note</th>\n  //               <th>PaymentId</th>\n  //               <th>Image</th>\n  //               <th>Count</th>\n  //               <th>Action</th>\n  //             </tr>\n  //             <tr>\n  //               {arrHotpots &&\n  //                 arrHotpots.map((item, index) => {\n  //                   console.log(\"check map\", item, index);\n  //                   return (\n  //                     <div className=\"divClass\">\n  //                       <td>{item.name}</td>\n  //                       <td>{item.provinceId}</td>\n  //                       <td>{item.addressRestaurant}</td>\n  //                       <td>{item.phonenumber}</td>\n  //                       <td>{item.nameRestaurant}</td>\n  //                       <td>{item.restaurantId}</td>\n  //                       <td>{item.typeId}</td>\n  //                       <td>{item.priceId}</td>\n  //                       <td>{item.note}</td>\n  //                       <td>{item.paymentId}</td>\n  //                       <td>{item.image}</td>\n  //                       <td>{item.count}</td>\n  //                       <td></td>\n  //                     </div>\n  //                   );\n  //                 })}\n  //             </tr>\n  //           </table>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n\n  render() {\n    console.log(\"check render\", this.state);\n    const {\n      arrHotpots\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotpots-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Qu\\u1EA3n l\\xFD m\\xF3n l\\u1EA9u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hotpots-table mt-3 mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"customers\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"T\\xEAn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ProvinceId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: arrHotpots && arrHotpots.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.provinceId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HotpotManage);","map":{"version":3,"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/System/HotpotManage.js"],"names":["React","Component","FormattedMessage","connect","getAllHotpots","HotpotManage","constructor","props","state","arrHotpots","componentDidMount","response","errCode","setState","hotpots","render","console","log","map","item","index","name","provinceId","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,qBAAP;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAEnC;AACA;AACA;AACAK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAJnBC,KAImB,GAJX,EAIW;AAEjB,SAAKA,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMP,aAAa,CAAC,KAAD,CAAlC;;AACA,QAAIO,QAAQ,IAAIA,QAAQ,CAACC,OAAT,KAAqB,CAArC,EAAwC;AACtC,WAAKC,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAEE,QAAQ,CAACG;AADT,OAAd;AAGD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKT,KAAjC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACE;AAAO,UAAA,EAAE,EAAC,WAAV;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,sBACGC,UAAU,IACTA,UAAU,CAACS,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,sCACE;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAASF,KAAT;AAAA;AAAA;AAAA;AAAA,oBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAvHkC;;AAyHrC,MAAMG,eAAe,GAAIf,KAAD,IAAW;AACjC,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAetB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,YAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HotpotManage.scss\";\r\nimport { getAllHotpots } from \"../../services/hotpotService\";\r\nclass HotpotManage extends Component {\r\n  state = {};\r\n  //constructor:\r\n  //khi component được render thì nó sẽ check hàm constructor đầu tiên\r\n  // khởi tạo những state (những biến mà ta muốn dùng class HotpotManage này)\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrHotpots: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let response = await getAllHotpots(\"ALL\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        arrHotpots: response.hotpots,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   *Life cycle:\r\n   Run component:\r\n   1. Run constructor -> init state (khởi tạo những biến sẽ dùng)\r\n   2. Run Did mount: khi nào muốn gán gtri cho 1 state nào đấy sẽ dùng trong hàm did mount \r\n   - gọi API lấy giá trị vào và set state cho component \r\n   - state lưu giá trị của các biến, và được dùng trong render \r\n   3. Run render \r\n   render cho ta nhìn thấy trên màn hình \r\n   *\r\n   *\r\n   *\r\n   *\r\n   */\r\n\r\n  //   render() {\r\n  //     console.log(\"check render\", this.state);\r\n  //     let arrHotpots = this.arrHotpots;\r\n  //     return (\r\n  //       <div className=\"hotpots-container\">\r\n  //         <div className=\"title\">Manage hotpot</div>\r\n  //         <div className=\"hotpots-table mt-3 mx-1\">\r\n  //           <table id=\"customers\">\r\n  //             <tr>\r\n  //               <th>Name</th>\r\n  //               <th>ProvinceId</th>\r\n  //               <th>Restaurant Address</th>\r\n  //               <th>Phone number</th>\r\n  //               <th>Restaurant Name</th>\r\n  //               <th>Restaurant Id</th>\r\n  //               <th>Type Id</th>\r\n  //               <th>PriceId</th>\r\n  //               <th>Note</th>\r\n  //               <th>PaymentId</th>\r\n  //               <th>Image</th>\r\n  //               <th>Count</th>\r\n  //               <th>Action</th>\r\n  //             </tr>\r\n  //             <tr>\r\n  //               {arrHotpots &&\r\n  //                 arrHotpots.map((item, index) => {\r\n  //                   console.log(\"check map\", item, index);\r\n  //                   return (\r\n  //                     <div className=\"divClass\">\r\n  //                       <td>{item.name}</td>\r\n  //                       <td>{item.provinceId}</td>\r\n  //                       <td>{item.addressRestaurant}</td>\r\n  //                       <td>{item.phonenumber}</td>\r\n  //                       <td>{item.nameRestaurant}</td>\r\n  //                       <td>{item.restaurantId}</td>\r\n  //                       <td>{item.typeId}</td>\r\n  //                       <td>{item.priceId}</td>\r\n  //                       <td>{item.note}</td>\r\n  //                       <td>{item.paymentId}</td>\r\n  //                       <td>{item.image}</td>\r\n  //                       <td>{item.count}</td>\r\n  //                       <td></td>\r\n  //                     </div>\r\n  //                   );\r\n  //                 })}\r\n  //             </tr>\r\n  //           </table>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    console.log(\"check render\", this.state);\r\n    const { arrHotpots } = this.state;\r\n\r\n    return (\r\n      <div className=\"hotpots-container\">\r\n        <div className=\"title\">Quản lý món lẩu</div>\r\n        <div className=\"hotpots-table mt-3 mx-1\">\r\n          <table id=\"customers\">\r\n            <thead>\r\n              <tr>\r\n                <th>Tên</th>\r\n                <th>ProvinceId</th>\r\n                {/* Các tiêu đề cột khác */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {arrHotpots &&\r\n                arrHotpots.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.provinceId}</td>\r\n                    {/* Các cột dữ liệu khác */}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HotpotManage);\r\n"]},"metadata":{},"sourceType":"module"}