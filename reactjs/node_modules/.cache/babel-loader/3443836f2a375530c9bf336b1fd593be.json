{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/hotpotService\";\n\n// export const fetchProvinceStart = () => ({\n//   type: actionTypes.FETCH_PROVINCE_START,\n// });\n\nexport const fetchProvinceStart = async (dispatch, getState) => {\n  try {\n    let res = await getAllCodeService();\n  } catch (e) {\n    fetchProvinceFailed();\n    console.log(e);\n  }\n};\nexport const fetchProvinceSuccess = () => ({\n  type: actionTypes.FETCH_PROVINCE_SUCCESS\n});\nexport const fetchProvinceFailed = () => ({\n  type: actionTypes.FETCH_PROVINCE_FAILED\n});","map":{"version":3,"names":["actionTypes","getAllCodeService","fetchProvinceStart","dispatch","getState","res","e","fetchProvinceFailed","console","log","fetchProvinceSuccess","type","FETCH_PROVINCE_SUCCESS","FETCH_PROVINCE_FAILED"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/hotpotService\";\r\n\r\n// export const fetchProvinceStart = () => ({\r\n//   type: actionTypes.FETCH_PROVINCE_START,\r\n// });\r\n\r\nexport const fetchProvinceStart = async (dispatch, getState) => {\r\n  try {\r\n    let res = await getAllCodeService();\r\n  } catch (e) {\r\n    fetchProvinceFailed();\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const fetchProvinceSuccess = () => ({\r\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\r\n});\r\n\r\nexport const fetchProvinceFailed = () => ({\r\n  type: actionTypes.FETCH_PROVINCE_FAILED,\r\n});\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,iBAAiB,QAAQ,8BAA8B;;AAEhE;AACA;AACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC9D,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMJ,iBAAiB,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOK,CAAC,EAAE;IACVC,mBAAmB,CAAC,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAGA,CAAA,MAAO;EACzCC,IAAI,EAAEX,WAAW,CAACY;AACpB,CAAC,CAAC;AAEF,OAAO,MAAML,mBAAmB,GAAGA,CAAA,MAAO;EACxCI,IAAI,EAAEX,WAAW,CAACa;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}