{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\containers\\\\HomePage\\\\Section\\\\HotpotType.js\";\nimport React, { Component } from \"react\";\nimport \"./HotpotType.scss\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport { getAllTypes } from \"../../../services/hotpotService\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HotpotType extends Component {\n  constructor(props) {\n    super(props);\n    this.handleViewDetailType = item => {\n      if (this.props.history) {\n        this.props.history.push(`/detail-type/${item.id}`);\n      }\n    };\n    this.state = {\n      dataType: []\n    };\n  }\n  async componentDidMount() {\n    let res = await getAllTypes();\n    if (res && res.errCode === 0) {\n      this.setState({\n        dataType: res.data\n      });\n    }\n  }\n  render() {\n    let {\n      dataType\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-type\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.type-popular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"homepage.more-info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            ...this.props.settings,\n            children: dataType && dataType.length > 0 && dataType.map((item, index) => {\n              let imageBase64 = \"\";\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, \"base64\").toString(\"binary\");\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize type-child\",\n                onClick: () => this.handleViewDetailType(item),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-image section-type\",\n                  style: {\n                    backgroundImage: `url(${imageBase64})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"type-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language\n  };\n};\n\n//fire events của redux\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HotpotType));\n//connect:kết nối react với redux\n//\n\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */","map":{"version":3,"names":["React","Component","connect","FormattedMessage","Slider","getAllTypes","withRouter","jsxDEV","_jsxDEV","HotpotType","constructor","props","handleViewDetailType","item","history","push","id","state","dataType","componentDidMount","res","errCode","setState","data","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","settings","length","map","index","imageBase64","image","Buffer","toString","onClick","style","backgroundImage","name","mapStateToProps","isLoggedIn","user","language","app","mapDispatchToProps","dispatch"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/HomePage/Section/HotpotType.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./HotpotType.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport { getAllTypes } from \"../../../services/hotpotService\";\r\nimport { withRouter } from \"react-router\";\r\nclass HotpotType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataType: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllTypes();\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataType: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleViewDetailType = (item) => {\r\n    if (this.props.history) {\r\n      this.props.history.push(`/detail-type/${item.id}`);\r\n    }\r\n  };\r\n  render() {\r\n    let { dataType } = this.state;\r\n    return (\r\n      <div className=\"section-share section-type\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">\r\n              <FormattedMessage id=\"homepage.type-popular\" />\r\n            </span>\r\n            <button className=\"btn-section\">\r\n              <FormattedMessage id=\"homepage.more-info\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {dataType &&\r\n                dataType.length > 0 &&\r\n                dataType.map((item, index) => {\r\n                  let imageBase64 = \"\";\r\n                  if (item.image) {\r\n                    imageBase64 = new Buffer(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div\r\n                      className=\"section-customize type-child\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailType(item)}\r\n                    >\r\n                      <div\r\n                        className=\"bg-image section-type\"\r\n                        style={{\r\n                          backgroundImage: `url(${imageBase64})`,\r\n                        }}\r\n                      />\r\n                      <div className=\"type-name\">{item.name}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\n//fire events của redux\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(HotpotType)\r\n);\r\n//connect:kết nối react với redux\r\n//\r\n\r\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,mBAAmB;AAC1B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,MAAM,MAAM,aAAa;AAChC,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,UAAU,SAASR,SAAS,CAAC;EACjCS,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAefC,oBAAoB,GAAIC,IAAI,IAAK;MAC/B,IAAI,IAAI,CAACF,KAAK,CAACG,OAAO,EAAE;QACtB,IAAI,CAACH,KAAK,CAACG,OAAO,CAACC,IAAI,CAAE,gBAAeF,IAAI,CAACG,EAAG,EAAC,CAAC;MACpD;IACF,CAAC;IAlBC,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,IAAIC,GAAG,GAAG,MAAMf,WAAW,CAAC,CAAC;IAC7B,IAAIe,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAK,CAAC,EAAE;MAC5B,IAAI,CAACC,QAAQ,CAAC;QACZJ,QAAQ,EAAEE,GAAG,CAACG;MAChB,CAAC,CAAC;IACJ;EACF;EAOAC,MAAMA,CAAA,EAAG;IACP,IAAI;MAAEN;IAAS,CAAC,GAAG,IAAI,CAACD,KAAK;IAC7B,oBACET,OAAA;MAAKiB,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACzClB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChClB,OAAA;UAAKiB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BlB,OAAA;YAAMiB,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC7BlB,OAAA,CAACL,gBAAgB;cAACa,EAAE,EAAC;YAAuB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACPtB,OAAA;YAAQiB,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC7BlB,OAAA,CAACL,gBAAgB;cAACa,EAAE,EAAC;YAAoB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNtB,OAAA;UAAKiB,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BlB,OAAA,CAACJ,MAAM;YAAA,GAAK,IAAI,CAACO,KAAK,CAACoB,QAAQ;YAAAL,QAAA,EAC5BR,QAAQ,IACPA,QAAQ,CAACc,MAAM,GAAG,CAAC,IACnBd,QAAQ,CAACe,GAAG,CAAC,CAACpB,IAAI,EAAEqB,KAAK,KAAK;cAC5B,IAAIC,WAAW,GAAG,EAAE;cACpB,IAAItB,IAAI,CAACuB,KAAK,EAAE;gBACdD,WAAW,GAAG,IAAIE,MAAM,CAACxB,IAAI,CAACuB,KAAK,EAAE,QAAQ,CAAC,CAACE,QAAQ,CACrD,QACF,CAAC;cACH;cACA,oBACE9B,OAAA;gBACEiB,SAAS,EAAC,8BAA8B;gBAExCc,OAAO,EAAEA,CAAA,KAAM,IAAI,CAAC3B,oBAAoB,CAACC,IAAI,CAAE;gBAAAa,QAAA,gBAE/ClB,OAAA;kBACEiB,SAAS,EAAC,uBAAuB;kBACjCe,KAAK,EAAE;oBACLC,eAAe,EAAG,OAAMN,WAAY;kBACtC;gBAAE;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACFtB,OAAA;kBAAKiB,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAEb,IAAI,CAAC6B;gBAAI;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GATvCI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUP,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;;AAEA;;AAEA,MAAMa,eAAe,GAAI1B,KAAK,IAAK;EACjC,OAAO;IACL2B,UAAU,EAAE3B,KAAK,CAAC4B,IAAI,CAACD,UAAU;IACjCE,QAAQ,EAAE7B,KAAK,CAAC8B,GAAG,CAACD;EACtB,CAAC;AACH,CAAC;;AAED;AACA,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO,CAAC,CAAC;AACX,CAAC;AAED,eAAe3C,UAAU,CACvBJ,OAAO,CAACyC,eAAe,EAAEK,kBAAkB,CAAC,CAACvC,UAAU,CACzD,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}