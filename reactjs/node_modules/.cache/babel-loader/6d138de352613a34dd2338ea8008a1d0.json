{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nconst useGeoLocation = () => {\n  _s();\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error: {\n        code: error.code,\n        message: error.message\n      }\n    });\n  };\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n_s(useGeoLocation, \"KNdeSz2ahz9V1UQjedGJDBN6DGI=\");\nexport default useGeoLocation;","map":{"version":3,"names":["React","useState","useEffect","useGeoLocation","_s","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","code","message","navigator","geolocation","getCurrentPosition"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/Customer/Map/useGeoLocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst useGeoLocation = () => {\r\n  const [location, setLocation] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: \"\", lng: \"\" },\r\n  });\r\n\r\n  const onSuccess = (location) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onError = (error) => {\r\n    setLocation({\r\n      loaded: true,\r\n      error: {\r\n        code: error.code,\r\n        message: error.message,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!(\"geolocation\" in navigator)) {\r\n      onError({\r\n        code: 0,\r\n        message: \"Geolocation not supported\",\r\n      });\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n\r\nexport default useGeoLocation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,MAAM,EAAE,KAAK;IACbC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG;EAClC,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAIN,QAAQ,IAAK;IAC9BC,WAAW,CAAC;MACVC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE;QACXC,GAAG,EAAEJ,QAAQ,CAACO,MAAM,CAACC,QAAQ;QAC7BH,GAAG,EAAEL,QAAQ,CAACO,MAAM,CAACE;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBV,WAAW,CAAC;MACVC,MAAM,EAAE,IAAI;MACZS,KAAK,EAAE;QACLC,IAAI,EAAED,KAAK,CAACC,IAAI;QAChBC,OAAO,EAAEF,KAAK,CAACE;MACjB;IACF,CAAC,CAAC;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAI,EAAE,aAAa,IAAIiB,SAAS,CAAC,EAAE;MACjCJ,OAAO,CAAC;QACNE,IAAI,EAAE,CAAC;QACPC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IAEAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACV,SAAS,EAAEI,OAAO,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOV,QAAQ;AACjB,CAAC;AAACD,EAAA,CAtCID,cAAc;AAwCpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module"}