{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\GR2\\\\reactjs\\\\src\\\\containers\\\\HomePage\\\\Section\\\\Restaurant.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport { getAllRestaurants } from \"../../../services/hotpotService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataRestaurant: []\n    };\n  }\n  async componentDidMount() {\n    let res = await getAllRestaurants();\n    console.log(\"Check response hotpot restaurant\", res);\n    if (res && res.errCode === 0) {\n      this.setState({\n        dataType: res.data\n      });\n    }\n  }\n  componentDidMount() {}\n  render() {\n    let {\n      dataRestaurant\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-restaurant\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: \"C\\xE1c nh\\xE0 h\\xE0ng n\\u1ED5i b\\u1EADt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: \"Xem th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            ...this.props.settings,\n            children: dataRestaurant && dataRestaurant.length > 0 && dataRestaurant.map((item, index) => {\n              let imageBase64 = \"\";\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, \"base64\").toString(\"binary\");\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-image section-type\",\n                  style: {\n                    backgroundImage: `url(${imageBase64})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    language: state.app.language\n  };\n};\n\n//fire events của redux\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurant);\n//connect:kết nối react với redux\n//\n\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */","map":{"version":3,"names":["React","Component","connect","FormattedMessage","Slider","getAllRestaurants","jsxDEV","_jsxDEV","Restaurant","constructor","props","state","dataRestaurant","componentDidMount","res","console","log","errCode","setState","dataType","data","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","settings","length","map","item","index","imageBase64","image","Buffer","toString","style","backgroundImage","name","mapStateToProps","isLoggedIn","user","language","app","mapDispatchToProps","dispatch"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/containers/HomePage/Section/Restaurant.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport { getAllRestaurants } from \"../../../services/hotpotService\";\r\n\r\nclass Restaurant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataRestaurant: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await getAllRestaurants();\r\n    console.log(\"Check response hotpot restaurant\", res);\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataType: res.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    let { dataRestaurant } = this.state;\r\n    return (\r\n      <div className=\"section-share section-restaurant\">\r\n        <div className=\"section-container\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">Các nhà hàng nổi bật</span>\r\n            <button className=\"btn-section\">Xem thêm</button>\r\n          </div>\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {dataRestaurant &&\r\n                dataRestaurant.length > 0 &&\r\n                dataRestaurant.map((item, index) => {\r\n                  let imageBase64 = \"\";\r\n                  if (item.image) {\r\n                    imageBase64 = new Buffer(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div className=\"section-customize\" key={index}>\r\n                      <div\r\n                        className=\"bg-image section-type\"\r\n                        style={{\r\n                          backgroundImage: `url(${imageBase64})`,\r\n                        }}\r\n                      />\r\n                      <div>{item.name}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//mapStateToProps: map state của redux vào react (Props), redux có thể lấy các biến qua câu lệnh this.props\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\n//fire events của redux\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurant);\r\n//connect:kết nối react với redux\r\n//\r\n\r\n/**\r\n * muốn lưu thông tin vào redux thì phải fire actions của nó\r\n * muốn lấy thông tin thì dùng hàm map và lấy qua biến props\r\n */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}