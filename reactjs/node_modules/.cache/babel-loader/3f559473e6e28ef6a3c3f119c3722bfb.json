{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService, createNewHotpotService, getAllHotpots } from \"../../services/hotpotService\";\nimport { toast } from \"react-toastify\";\n\n// export const fetchProvinceStart = () => ({\n//   type: actionTypes.FETCH_PROVINCE_START,\n// });\n\n//provine\nexport const fetchProvinceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PROVINCE_START\n      });\n      let res = await getAllCodeService(\"PROVINCE\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchProvinceSuccess(res.data));\n      } else {\n        dispatch(fetchProvinceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchProvinceFailed());\n      console.log(\"fetchProvinceStart error\", e);\n    }\n  };\n};\nexport const fetchProvinceSuccess = provinceData => ({\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\n  data: provinceData\n});\nexport const fetchProvinceFailed = () => ({\n  type: actionTypes.FETCH_PROVINCE_FAILED\n});\n\n//price\n\nexport const fetchPriceSuccess = priceData => ({\n  type: actionTypes.FETCH_PRICE_SUCCESS,\n  data: priceData\n});\nexport const fetchPriceFailed = () => ({\n  type: actionTypes.FETCH_PRICE_FAILED\n});\n\n//payment\n\nexport const fetchPaymentSuccess = paymentData => ({\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\n  data: paymentData\n});\nexport const fetchPaymentFailed = () => ({\n  type: actionTypes.FETCH_PAYMENT_FAILED\n});\nexport const fetchPriceStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PRICE_START\n      });\n      let res = await getAllCodeService(\"PRICE\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPriceSuccess(res.data));\n      } else {\n        dispatch(fetchPriceFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPriceFailed());\n      console.log(\"fetchPriceStart error\", e);\n    }\n  };\n};\nexport const fetchPaymentStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PAYMENT_START\n      });\n      let res = await getAllCodeService(\"PAYMENT\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchPaymentSuccess(res.data));\n      } else {\n        dispatch(fetchPaymentFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPaymentFailed());\n      console.log(\"fetchPaymentStart error\", e);\n    }\n  };\n};\nexport const createNewHotpot = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createNewHotpotService(data);\n      if (res && res.errCode === 0) {\n        toast.success(\"Create a new hotpot succeed!\");\n        dispatch(createHotpotSuccess());\n        dispatch(fetchAllHotpotsStart());\n      } else {\n        dispatch(createHotpotFailed());\n      }\n    } catch (e) {\n      dispatch(createHotpotFailed());\n      console.log(\"fetchPaymentStart error\", e);\n    }\n  };\n};\nexport const createHotpotFailed = () => ({\n  type: actionTypes.CREATE_HOTPOT_FAILED\n});\nexport const createHotpotSuccess = () => ({\n  type: actionTypes.CREATE_HOTPOT_SUCCESS\n});\nexport const fetchAllHotpotsStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_PROVINCE_START\n      });\n      let res = await getAllHotpots(\"ALL\");\n      if (res && res.errCode === 0) {\n        dispatch(fetchAllHotpotsSuccess(res.hotpots.reverse()));\n      } else {\n        dispatch(fetchAllHotpotsFailed());\n      }\n    } catch (e) {\n      dispatch(fetchAllHotpotsFailed());\n      console.log(\"fetchAllHotpotsStart error\", e);\n    }\n  };\n};\nexport const fetchAllHotpotsFailed = () => ({\n  type: actionTypes.FETCH_ALL_HOTPOTS_FAILED\n});\nexport const fetchAllHotpotsSuccess = data => ({\n  type: actionTypes.FETCH_ALL_HOTPOTS_SUCCESS,\n  hotpots: data\n});","map":{"version":3,"names":["actionTypes","getAllCodeService","createNewHotpotService","getAllHotpots","toast","fetchProvinceStart","dispatch","getState","type","FETCH_PROVINCE_START","res","errCode","fetchProvinceSuccess","data","fetchProvinceFailed","e","console","log","provinceData","FETCH_PROVINCE_SUCCESS","FETCH_PROVINCE_FAILED","fetchPriceSuccess","priceData","FETCH_PRICE_SUCCESS","fetchPriceFailed","FETCH_PRICE_FAILED","fetchPaymentSuccess","paymentData","FETCH_PAYMENT_SUCCESS","fetchPaymentFailed","FETCH_PAYMENT_FAILED","fetchPriceStart","FETCH_PRICE_START","fetchPaymentStart","FETCH_PAYMENT_START","createNewHotpot","success","createHotpotSuccess","fetchAllHotpotsStart","createHotpotFailed","CREATE_HOTPOT_FAILED","CREATE_HOTPOT_SUCCESS","fetchAllHotpotsSuccess","hotpots","reverse","fetchAllHotpotsFailed","FETCH_ALL_HOTPOTS_FAILED","FETCH_ALL_HOTPOTS_SUCCESS"],"sources":["C:/Users/admin/Downloads/GR2/reactjs/src/store/actions/adminActions.js"],"sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport {\r\n  getAllCodeService,\r\n  createNewHotpotService,\r\n  getAllHotpots,\r\n} from \"../../services/hotpotService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// export const fetchProvinceStart = () => ({\r\n//   type: actionTypes.FETCH_PROVINCE_START,\r\n// });\r\n\r\n//provine\r\nexport const fetchProvinceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PROVINCE_START,\r\n      });\r\n      let res = await getAllCodeService(\"PROVINCE\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchProvinceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchProvinceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchProvinceFailed());\r\n      console.log(\"fetchProvinceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProvinceSuccess = (provinceData) => ({\r\n  type: actionTypes.FETCH_PROVINCE_SUCCESS,\r\n  data: provinceData,\r\n});\r\n\r\nexport const fetchProvinceFailed = () => ({\r\n  type: actionTypes.FETCH_PROVINCE_FAILED,\r\n});\r\n\r\n//price\r\n\r\nexport const fetchPriceSuccess = (priceData) => ({\r\n  type: actionTypes.FETCH_PRICE_SUCCESS,\r\n  data: priceData,\r\n});\r\n\r\nexport const fetchPriceFailed = () => ({\r\n  type: actionTypes.FETCH_PRICE_FAILED,\r\n});\r\n\r\n//payment\r\n\r\nexport const fetchPaymentSuccess = (paymentData) => ({\r\n  type: actionTypes.FETCH_PAYMENT_SUCCESS,\r\n  data: paymentData,\r\n});\r\n\r\nexport const fetchPaymentFailed = () => ({\r\n  type: actionTypes.FETCH_PAYMENT_FAILED,\r\n});\r\n\r\nexport const fetchPriceStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PRICE_START,\r\n      });\r\n      let res = await getAllCodeService(\"PRICE\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPriceSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPriceFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPriceFailed());\r\n      console.log(\"fetchPriceStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPaymentStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PAYMENT_START,\r\n      });\r\n      let res = await getAllCodeService(\"PAYMENT\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchPaymentSuccess(res.data));\r\n      } else {\r\n        dispatch(fetchPaymentFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchPaymentFailed());\r\n      console.log(\"fetchPaymentStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewHotpot = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await createNewHotpotService(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\"Create a new hotpot succeed!\");\r\n        dispatch(createHotpotSuccess());\r\n        dispatch(fetchAllHotpotsStart());\r\n      } else {\r\n        dispatch(createHotpotFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(createHotpotFailed());\r\n      console.log(\"fetchPaymentStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createHotpotFailed = () => ({\r\n  type: actionTypes.CREATE_HOTPOT_FAILED,\r\n});\r\n\r\nexport const createHotpotSuccess = () => ({\r\n  type: actionTypes.CREATE_HOTPOT_SUCCESS,\r\n});\r\n\r\nexport const fetchAllHotpotsStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: actionTypes.FETCH_PROVINCE_START,\r\n      });\r\n      let res = await getAllHotpots(\"ALL\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllHotpotsSuccess(res.hotpots.reverse()));\r\n      } else {\r\n        dispatch(fetchAllHotpotsFailed());\r\n      }\r\n    } catch (e) {\r\n      dispatch(fetchAllHotpotsFailed());\r\n      console.log(\"fetchAllHotpotsStart error\", e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllHotpotsFailed = () => ({\r\n  type: actionTypes.FETCH_ALL_HOTPOTS_FAILED,\r\n});\r\n\r\nexport const fetchAllHotpotsSuccess = (data) => ({\r\n  type: actionTypes.FETCH_ALL_HOTPOTS_SUCCESS,\r\n  hotpots: data,\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}